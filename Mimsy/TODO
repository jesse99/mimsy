* Open selection should be able to open directories.
* Language files should have support for a run key:
	- value is command line used to run a single file (or *.c file for C based languages)
	- probably triggered by option-R
	- will need to include this in shortcuts (could start this file before hooking it up)
	- possibly also syntax check command
* Context menu should maybe use a hueristic to add open (local) files based on selection name.
* Add directory document:
	- use WindowDatabase
	- return should do an open
* Might want Run and Test commands (run different targets).
* Build menu should reload if build file changes.
* Should have some sort of field to use when toggling between header and C files:
	- maybe also stuff like .html and .css and .js
* Work on styling:
	- add some sort of search key
		can appear multiple times
		augments context menu
		will need to bump build number
	- add a pref for extensions to languages
	- make sure pref has a button to open the dir with the vim files
	- may be able to do something with NSLinkAttributeName
	- probably should have a way to have fallback element name aliases
	- would be nice if there was a way to show which elements text ranges belong to
		could do this by adding a "style name" attribute
* NSLayoutManager has methods for underlining and striking through character ranges.
* Would be nice to have a way to create new files:
	- option-N pops up a list users can choose from
	- remember last selection
	- probably mustache (and maybe also arbitrary scripts)
	- mustache could have templates for things like user name, year, maybe custom settings
	- scripts could have a mode to tell mimsy what they need (eg class name)
	- could do similar thing to support inserting language elements
	- may want a way to disable these, maybe it is present but ignored if wrapped in parens
	- could include build scripts (eg C Makefile)
* Maybe handle common extension points via external files:
	- for build systems Python script returning
		` build file (mimsy will watch for changes to this file)
		` targets
		` command lines for the targets
	- for tools declarative file with
		` regex for errors
		` regex for warnings
		` mapping from group number to standard categories like file, line, col
	- language files need to include search URL
	- would be nice to do something for SCCSs
* Work on directory editor.
* git modified file indicator is nice.
* Could use styler to support jump to definition:
	- directory watcher and a task are used to maintain a cache
	- project pref could have paths to dependencies
	- lua hooks could allow for more sophisticated implementations (eg for clang)
* Need to add support for a bunch more languages.
* Experiment with code folding:
	- need a language regex or string to indicate range start and end
	- probably want to just toggle folding on and off
	- doesn't appear to be a good way to do this just by mucking with visuals
	- one possibility is to switch to a 1pt font
	  would preserve line numbers and make it simple to do things like search or process the text
	- show range (eg for find) would need to auto-unfold
* Do something with the About box.
* The suggestions that XCode provides when there are errors are pretty cool.
* Might want to cache styles:
	- its fairly common to open and close large source files
	- probably want some logging for how large the cache gets
* Do something special with file rename when a SCCS is present.
* Should have a mode where tab uses tab at the start of lines, but spaces once the line starts.
* Might also want to use that wacky VIM(?) meta-data embedded in files containing info like tab lengths
	- or support a dot file that does the same thing
* Work on building:
	- might be able to use vim files, eg /usr/share/vim/vim73/compiler/gcc.vim
* Might be cool to replace some strings on load/save:
	- -> and => to unicode arrows
	- :: to something
	- probably would also have to do this during editing
* Make sure builds call reloadIfChanged
* Find in files needs to be able to search rtf files.
* Get searching in help files working.
* Info window should have a popup to override default styler file.
* Maybe could have an option to get rid of tabs altogether
	- tab adds enough spaces to offset to a modulo-N column
	- backspace gobbles N spaces where possible
	- would this work with proportional fonts?
	- optionally allow tabs at the start of lines
* Would be nice if there was a way to hide "chrome":
	- mostly helper windows, like find panels and recent files
	- maybe also directory windows
	- maybe all the chrome could be toggled via control key, then could use control-k to toggle chrome
* Can we support references somehow?
	- ideally per language
* Maybe also a short view:
	- remove function bodies
	- possibly format doc comments
* Would be cool if there was a way to configure command keys:
	- maybe mimsy file or lua script
* Would be nice to have some sort of indication of dirty files:
	- probably from git's perspective
* XCode and (I guess) TextMate have a bunch of macros:
	- type some abreviation, hit escape, and they are expanded
* Might want to add to the app store:
	- see what the policy is for open source apps
	- look at Prepare for Mac App Store Submission link
* Support named bookmarks.
* Support snippets:
	- should be per language
	- maybe both text and script based (or possibly scripts are refactors)
* Could replace Mimsy files with lua config files:
	- regex would be a little annoying, probably would need to use long brackets to avoid escaping
	- maybe a little annoying to edit too: lua is simple but not as simple as the Mimsy format
* History of cursor positions?
* Release checklist:
	- might have to add a lame build step to archive build to copy the styles files a second time
	- make sure that the binary works on someone elses mac
	- increment support files version number
	- ship the release version
	
	
	