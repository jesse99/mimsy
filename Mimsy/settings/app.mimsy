# Various settings that control the behavior of Mimsy. Note that, if a 
# project.mimsy file exists, any settings there will override these 
# settings.

#### Find and Find All ####################################################
# The find command defaults to searching from the beginning of a document
# when it hits the end.
FindWraps: true

# Maximum number of items to save in the find and replace combo boxes.
NumFindItems: 8

# These make it easier to use the find windows to search within regions
# of code. The names are elements from language files.
SearchWithin: everything
SearchWithin: Argument
SearchWithin: Comment
SearchWithin: DocComment
SearchWithin: Function
SearchWithin: Identifier
SearchWithin: String
SearchWithin: Type

# These are used to control which files Find All searches within. The
# first is a good canidate for overriding in your project's .mimsy.rtf
# setting file. Note that there is no UI for the last one; set it in
# a settings file and then press the Reset button in the Find All window.
FindAllIncludes: *.c *.cpp *.c++ *.cs *.h *.hpp *.m *.rs *.js
FindAllExcludes:
FindAllAlwaysExclude: .* *.app Backups.backupdb bin *.dll *.dylib *.exe *.gif *.icns *.jpeg *.jpg *.mdb *.nib *.pdb *.X11 *.xib

# These directories, as well as any directories that the user opens, are
# are added to the directory dropdown menu in the Find All window. Currently
# there is no way to remove directories from the menu other than using the 
# Reset button. TODO: sucks that the AppKit and Foundation paths depend on
# the sdk version.
DefaultFindAllDirectory: Open Windows
DefaultFindAllDirectory: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/AppKit.framework/Versions/Current/Headers
DefaultFindAllDirectory: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/Foundation.framework/Versions/Current/Headers
DefaultFindAllDirectory: /System/Library/Frameworks/CoreFoundation.framework/Versions/Current/Headers

#### Build Errors ######################################################
# These are used to parse build output for error messages. The values
# are formatted as "flags regex" where flag indexes correspond to group
# indexes in the regex and the flag names are:
#   F   for the path to the file which had the error (may be a relative path or just a file name)
#   L   for the 1-based line number within the file
#   C   for the 1-based column number within the file
#   M   for the error message
# Not all flags need be present.

# gcc
BuildError: FLCM ^([^:\r\n]+):(\d+):(\d+):\s+\w+:\s+(.+)$

# go
BuildError: FLM ^([^:\r\n]+):(\d+):(.+)$

#### Open Selection ####################################################
# These are globs for paths that open selection will open preferentially: when open
# selection uses the locate command and finds files matching these paths it will open 
# those instead of any other files it happens to find. Dot and dot dot are special cased
# and match the active directory window's path and the parent directory of that path.
PreferredPath: .

# These are globs for paths that open selection will not open.
IgnoredPath: */.svn/*
IgnoredPath: */Backups.backupdb/*
IgnoredPath: */Xcode.app/*

#### Misc Settings ####################################################
# This is added to the PATH enviroment variable used by executable extensions
# (this is useful because extensions inherit Mimsy's environment variables and
# GUI applications don't have the same variables as shell tools).
#
# This setting may appear multiple times. /opt/local/bin is where Go installs
# its tools.
AppendPath: /opt/local/bin

# Number of milliseconds before changing the alpha for the translucent
# warning and info windows displayed above text windows, e.g. the unmatched 
# brace warning window or the info window displayed saying how many replacements
# replace all performed.
WarnWindowDelay: 60

# These are added to the Search menu to allow you to search for the selection
# using different sites. Note that you can also specify these in language files.
SearchIn: [Stack Overflow]http://stackoverflow.com/search?q=${TEXT}
SearchIn: [Google]http://www.google.com/search?q=${TEXT}

# These are used to add context sensitive help to the Help menu. The string within
# the braces is a dash separated list of context names (see Help Files in the Help 
# menu for a list of context names). The name within the square brackets is used 
# for the menu title. After the brackers is either an URL or an absolute path to a file.
#
# It's also possible to add new context help menu items by editing the files
# within the Help directory (again see Help Files in the Help menu).
ContextHelp: {app}[Mimsy Web Site]https://github.com/jesse99/mimsy

# If this is true then paths are shown in reverse order under the assumption
# that the later parts of the path are the most important and should be displayed
# first. So a path like /tmp/foo/bar would be displayed as bar • foo • tmp.
ReversePaths: true

# This enables quote, dash, and text replacements in documents which are not
# plain text (e.g. rtf or word files). For example, double quotes will be
# automatically replaced with left and right quotation marks.
EnableSubstitutions: true

# Globs for file names to not open inside of Mimsy. By default Mimsy will open
# all text files within Mimsy but if certain files are best opened with a different
# application you can add their extension here.
DontOpenWithMimsy:

# When pasting from something like Terminal into a Mimsy RTF file it's
# usually annoying to preserve the window back color.
PasteCopiesBackColor: false

# File extensions used by the open-dual extension.
FileDual: h c cpp c++ m
FileDual: c h
FileDual: cpp h hpp h++
FileDual: c++ h hpp h++
FileDual: m h

